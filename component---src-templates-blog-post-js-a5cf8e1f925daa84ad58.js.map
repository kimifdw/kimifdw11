{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","pageContext","previous","next","location","title","frontmatter","description","spoiler","slug","fields","style","color","scale","display","marginBottom","rhythm","marginTop","formatPostDate","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","fontFamily","boxShadow","textDecoration","to","flexWrap","justifyContent","listStyle","padding","rel","marginRight","React","Component","pageQuery"],"mappings":"mTAWMA,E,kGACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAF3B,EAMHD,KAAKC,MAAMK,YAFbC,EAJK,EAILA,SACAC,EALK,EAKLA,KAGF,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUC,MAAON,GAC5C,kBAAC,IAAD,CACEM,MAAOX,EAAKY,YAAYD,MACxBE,YAAab,EAAKY,YAAYE,QAC9BC,KAAMf,EAAKgB,OAAOD,OAEpB,8BACE,iCACE,gCACE,wBAAIE,MAAO,CAAEC,MAAO,qBACjBlB,EAAKY,YAAYD,OAEpB,uBACEM,MAAK,iBACAE,aAAM,IADN,CAEHC,QAAS,QACTC,aAAcC,YAAO,GACrBC,UAAWD,aAAO,OAGnBE,YAAexB,EAAKY,YAAYa,MARnC,MASSC,YAAkB1B,EAAK2B,cAGlC,yBAAKC,wBAAyB,CAAEC,OAAQ7B,EAAK8B,UAGjD,+BACE,wBACEb,MAAO,CACLc,WAAY,yBACZR,UAAWD,YAAO,OAGpB,kBAAC,OAAD,CACEL,MAAO,CACLe,UAAW,OACXC,eAAgB,OAChBf,MAAO,iBAETgB,GAAI,KANN,aAWF,kBAAC,IAAD,MACA,6BACE,wBACEjB,MAAO,CACLG,QAAS,OACTe,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACG9B,GACC,kBAAC,OAAD,CACE0B,GAAI1B,EAASQ,OAAOD,KACpBwB,IAAI,OACJtB,MAAO,CAAEuB,YAAa,KAHxB,KAKKhC,EAASI,YAAYD,QAI9B,4BACGF,GACC,kBAAC,OAAD,CAAMyB,GAAIzB,EAAKO,OAAOD,KAAMwB,IAAI,QAC7B9B,EAAKG,YAAYD,MADpB,Y,GA/Ea8B,IAAMC,WA4FtB5C,YAER,IAAM6C,EAAS","file":"component---src-templates-blog-post-js-a5cf8e1f925daa84ad58.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport '../fonts/fonts-post.css';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    let {\n      previous,\n      next,\n    } = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        <main>\n          <article>\n            <header>\n              <h1 style={{ color: 'var(--textTitle)' }}>\n                {post.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: 'block',\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(post.frontmatter.date)}\n                {` • ${formatReadingTime(post.timeToRead)}`}\n              </p>\n            </header>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          </article>\n        </main>\n        <aside>\n          <h3\n            style={{\n              fontFamily: 'Montserrat, sans-serif',\n              marginTop: rhythm(0.25),\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--orange)',\n              }}\n              to={'/'}\n            >\n              F&Y-BLOG\n            </Link>\n          </h3>\n          <Bio />\n          <nav>\n            <ul\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                listStyle: 'none',\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link\n                    to={previous.fields.slug}\n                    rel=\"prev\"\n                    style={{ marginRight: 20 }}\n                  >\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}