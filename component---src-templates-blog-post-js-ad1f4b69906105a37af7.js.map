{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","pageContext","previous","next","location","title","frontmatter","description","spoiler","slug","fields","style","color","scale","display","marginBottom","rhythm","marginTop","formatPostDate","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","fontFamily","boxShadow","textDecoration","to","flexWrap","justifyContent","listStyle","padding","rel","marginRight","React","Component","pageQuery"],"mappings":"mTAWMA,E,kGACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAF3B,EAMHD,KAAKC,MAAMK,YAFbC,EAJK,EAILA,SACAC,EALK,EAKLA,KAGF,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUC,MAAON,GAC5C,kBAAC,IAAD,CACEM,MAAOX,EAAKY,YAAYD,MACxBE,YAAab,EAAKY,YAAYE,QAC9BC,KAAMf,EAAKgB,OAAOD,OAEpB,8BACE,iCACE,gCACE,wBAAIE,MAAO,CAAEC,MAAO,qBACjBlB,EAAKY,YAAYD,OAEpB,uBACEM,MAAK,iBACAE,aAAM,IADN,CAEHC,QAAS,QACTC,aAAcC,YAAO,GACrBC,UAAWD,aAAO,OAGnBE,YAAexB,EAAKY,YAAYa,MARnC,MASSC,YAAkB1B,EAAK2B,cAGlC,yBAAKC,wBAAyB,CAAEC,OAAQ7B,EAAK8B,UAGjD,+BACE,wBACEb,MAAO,CACLc,WAAY,yBACZR,UAAWD,YAAO,OAGpB,kBAAC,OAAD,CACEL,MAAO,CACLe,UAAW,OACXC,eAAgB,OAChBf,MAAO,iBAETgB,GAAI,KANN,aAWF,kBAAC,IAAD,MACA,6BACE,wBACEjB,MAAO,CACLG,QAAS,OACTe,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACG9B,GACC,kBAAC,OAAD,CACE0B,GAAI1B,EAASQ,OAAOD,KACpBwB,IAAI,OACJtB,MAAO,CAAEuB,YAAa,KAHxB,KAKKhC,EAASI,YAAYD,QAI9B,4BACGF,GACC,kBAAC,OAAD,CAAMyB,GAAIzB,EAAKO,OAAOD,KAAMwB,IAAI,QAC7B9B,EAAKG,YAAYD,MADpB,Y,GA/Ea8B,IAAMC,WA4FtB5C,YAER,IAAM6C,EAAS","file":"component---src-templates-blog-post-js-ad1f4b69906105a37af7.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport get from 'lodash/get';\r\n\r\nimport '../fonts/fonts-post.css';\r\nimport Bio from '../components/Bio';\r\nimport Layout from '../components/Layout';\r\nimport SEO from '../components/SEO';\r\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\r\nimport { rhythm, scale } from '../utils/typography';\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark;\r\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\r\n    let {\r\n      previous,\r\n      next,\r\n    } = this.props.pageContext;\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.spoiler}\r\n          slug={post.fields.slug}\r\n        />\r\n        <main>\r\n          <article>\r\n            <header>\r\n              <h1 style={{ color: 'var(--textTitle)' }}>\r\n                {post.frontmatter.title}\r\n              </h1>\r\n              <p\r\n                style={{\r\n                  ...scale(-1 / 5),\r\n                  display: 'block',\r\n                  marginBottom: rhythm(1),\r\n                  marginTop: rhythm(-4 / 5),\r\n                }}\r\n              >\r\n                {formatPostDate(post.frontmatter.date)}\r\n                {` • ${formatReadingTime(post.timeToRead)}`}\r\n              </p>\r\n            </header>\r\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n          </article>\r\n        </main>\r\n        <aside>\r\n          <h3\r\n            style={{\r\n              fontFamily: 'Montserrat, sans-serif',\r\n              marginTop: rhythm(0.25),\r\n            }}\r\n          >\r\n            <Link\r\n              style={{\r\n                boxShadow: 'none',\r\n                textDecoration: 'none',\r\n                color: 'var(--orange)',\r\n              }}\r\n              to={'/'}\r\n            >\r\n              FDW-blog\r\n            </Link>\r\n          </h3>\r\n          <Bio />\r\n          <nav>\r\n            <ul\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n                listStyle: 'none',\r\n                padding: 0,\r\n              }}\r\n            >\r\n              <li>\r\n                {previous && (\r\n                  <Link\r\n                    to={previous.fields.slug}\r\n                    rel=\"prev\"\r\n                    style={{ marginRight: 20 }}\r\n                  >\r\n                    ← {previous.frontmatter.title}\r\n                  </Link>\r\n                )}\r\n              </li>\r\n              <li>\r\n                {next && (\r\n                  <Link to={next.fields.slug} rel=\"next\">\r\n                    {next.frontmatter.title} →\r\n                  </Link>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </aside>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      html\r\n      timeToRead\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        spoiler\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}